/* 共通部分 _s ////////////////////////////*/
.slider {
  position: relative;
  overflow: hidden;
  /*
                                          ---
                                          height:100vhの理由：
                                          absoluteを考慮し、slider領域を確保する。
                                          height:100vhと指定するとviewport:表示領域の高さがsliderの高さになる
                                          ---
                                      
                                          ---
                                          前提
                                          width:上位でも指定なし or width:100% 指定で、ブラウザの幅が適用されているため、100%にしておけば、ブラウザの幅になる。
                                          height：上位でも指定なし or height:100% 指定で、0となる。
                                          ※ただし、bodyで100%指定されていると高さがブラウザ全体になる
                                          ---
                                        
                                          ---
                                          height:100vhがないとどうなるか？
                                          heightはデフォルトautoで子要素の高さに自動調整される。
                                          しかし、子要素のslideクラスでabsoluteが指定されているので、height:0と同じことになり、
                                          次の同レベルの要素がくっついてしまう。
                                          */
  width: 100vw;
  height: 100vh;
}

.slider .text-overlay {
  position: absolute;
  top: 300px;
  left: 30px;
  color: white;
  width: 60vw;
}



.slider .text-overlay1 h1 {
  font-size: 4rem;
  font-weight: 800;
  line-height: 1.3;
}

.slider .text-overlay2 h2 {
  font-size: 1.3rem;
  line-height: 2;
  font-weight: 400;
  margin-top: 20px;
  /* スライダーh2上スペース */
}

/* スマホレイアウト */
@media (max-width: 768px) {
  .slider .text-overlay {
    width: 80vw;
  }

  .slider .text-overlay1 h1 {
    font-size: 2.5rem;
    font-weight: 800;
  }

  .slider .text-overlay2 h2 {
    font-size: 1rem;
    font-weight: 400;
  }
}



.slider .text-overlay2 h2 {
  border-bottom: none;
}

.slider .text-overlay2 h2::after {
  display: none;
}


.slider .slide img {
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  /* 縦横比を維持しながら、収まらない部分をカット */
}

/* 共通部分 _e ////////////////////////////*/

/* スライド式エフェクト _s ////////////////////////////*/
.slider.slide-effect .slides {
  display: flex;
  /*transition: transform 1s ease-out;*/
}

.slider.slide-effect .slide {
  min-width: 100%;
}

/* スライド式エフェクト _e ////////////////////////////*/

/* フェード式エフェクト _s ////////////////////////////*/
.slider.fade-effect .slide {
  /*レイアウト：画像を重ねるためにabsoluteを指定する。基準は親のslider*/
  position: absolute;

  /* 初期状態では非表示（レイアウトは維持） */
  transition: opacity 3s ease-in-out;
  opacity: 0;

}

/*lcp高速化のためのチューニング*/

.slider.fade-effect .slide.active {
  /* フェードイン時に表示 */
  opacity: 1;
  /* active のときだけ表示 */
  /*z-index: 1;*/
  /*height:autoではレイアウトの再計算が行われるため100%(100vh)とする*/
}



/* フェード式エフェクト _e ////////////////////////////*/


/* @media screen and (max-width: 767px) {
  .slider {
    height: auto;
  }
  .slide img {
    width: 100%;
    height: auto;
  }
} */

/* slider text _e */
/* slider _e //////////////////////////////////////////////// */